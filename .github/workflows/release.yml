on:
  push:
    tags:
      - "v*"
name: Build Release
jobs:
  test:
    name: Test before build
    runs-on: windows-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.16.2" # The Go version to download (if necessary) and use.
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
      - name: Generate protobuf
        shell: powershell
        run: .\scripts\proto.ps1
      - name: test packages
        run: go test .\...
      - name: Build MatrixControl DLL (Debug)
        run: MSBuild.exe .\cxx\MatrixController.sln /property:Configuration=Debug /property:Platform=x64
  publish:
    name: Create release-artifacts
    runs-on: windows-latest
    needs: test
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.16.2" # The Go version to download (if necessary) and use.
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
      - name: Generate protobuf
        shell: powershell
        run: .\scripts\proto.ps1
      - name: Build Artifacts
        shell: powershell
        run: .\.github\build.ps1
      - name: Create Release # https://github.com/actions/upload-release-asset/issues/47#issuecomment-659071145
        uses: actions/github-script@v2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            console.log('environment', process.versions);

            const fs = require('fs').promises;

            const { repo: { owner, repo }, sha } = context;
            console.log({ owner, repo, sha });

            const tag_name = context.ref.replace(/refs\/tags\//, '');

            const release = await github.repos.createRelease({
              owner, repo,
              tag_name: tag_name,
              draft: true,
              prerelease: false,
              body: "Automated Release by GitHub Action CI. Please see tag annotation for changelog.",
              name: "Release " + tag_name,
              target_commitish: sha
            });

            console.log('created release', { release });

            let files = [];

            files.push(...await fs.readdir('./build/'))
            // files.push('./cxx/x64/Release/MatrixController.dll')

            for (let file of files) {
              console.log('uploading', file);

              await github.repos.uploadReleaseAsset({
                owner, repo,
                release_id: release.data.id,
                name: file,
                data: await fs.readFile(`./build/${file}`)
              });            
            }
